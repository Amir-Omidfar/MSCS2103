// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/FullAdder.hdl
/**
 * Computes the sum of three bits.
 */
CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:

    HalfAdder(a=a,b=b,sum=ab,carry=cab);
    HalfAdder(a=c,b=ab,sum=sum,carry=s);
    Or(a=cab,b=s,out=carry);
    //// Replace this comment with your code.
    //Sum
    /*
    Xor (a = a, b = b, out = o1 );
    Xor (a = o1, b = c, out = sum);
    //Carry 
    And (a = a, b = b, out = c1);
    And (a = c, b = o1, out = c2);
    Or (a = c1, b = c2, out = carry );
    */


}

/*
For carry to be 1  we need at least two input to be 1:
carry  = a&&b or a&&c or b&&c
however better implementation would be:
carry = a&&b or c and (a xor b)

in  c s
000 0 0
001 0 1  (a and b) and c
010 0 1
011 1 0  
100 0 1
101 1 0
110 1 0
111 1 1

*/